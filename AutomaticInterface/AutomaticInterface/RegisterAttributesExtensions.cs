using System.Text;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Text;

namespace AutomaticInterface;

internal static class RegisterAttributesExtensions
{
    public static IncrementalGeneratorInitializationContext RegisterDefaultAttribute(
        this IncrementalGeneratorInitializationContext context
    )
    {
        context.RegisterPostInitializationOutput(static postInitializationContext =>
        {
            postInitializationContext.AddSource(
                $"{AutomaticInterfaceGenerator.DefaultAttributeName}.Attribute.g.cs",
                SourceText.From(
                    $$$"""
                    // <auto-generated />
                    using System;

                    namespace AutomaticInterface
                    {
                        /// <summary>
                        /// Use source generator to automatically create a Interface from this class
                        /// </summary>
                        [AttributeUsage(AttributeTargets.Class)]
                        internal sealed class {{{AutomaticInterfaceGenerator.DefaultAttributeName}}}Attribute : Attribute
                        {
                            /// <param name="{{{AutomaticInterfaceGenerator.NamespaceParameterName}}}">Namespace name for the generated interface. Defaults to the same namespace as the class.</param>
                            /// <param name="{{{AutomaticInterfaceGenerator.InterfaceParameterName}}}">Interface name for the generated interface. Defaults to an interface version of the class name.</param>
                            /// <param name="{{{AutomaticInterfaceGenerator.AsInternalParameterName}}}">If true, set the visibility of the interface to internal.</param>
                            internal {{{AutomaticInterfaceGenerator.DefaultAttributeName}}}Attribute(string {{{AutomaticInterfaceGenerator.NamespaceParameterName}}} = "", string {{{AutomaticInterfaceGenerator.InterfaceParameterName}}} = "", bool {{{AutomaticInterfaceGenerator.AsInternalParameterName}}} = false) { }
                        }
                    }
                    """,
                    Encoding.UTF8
                )
            );
        });
        return context;
    }

    public static IncrementalGeneratorInitializationContext RegisterIgnoreAttribute(
        this IncrementalGeneratorInitializationContext context
    )
    {
        context.RegisterPostInitializationOutput(static postInitializationContext =>
        {
            postInitializationContext.AddSource(
                $"{AutomaticInterfaceGenerator.IgnoreAutomaticInterfaceAttributeName}.Attribute.g.cs",
                SourceText.From(
                    $$$"""
                    // <auto-generated />
                    using System;

                    namespace AutomaticInterface
                    {
                        /// <summary>
                        /// Ignore this member in a generated Interface from this class
                        /// </summary>
                        [AttributeUsage(AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Event)]
                        internal sealed class {{{AutomaticInterfaceGenerator.IgnoreAutomaticInterfaceAttributeName}}}Attribute : Attribute
                        {
                            internal {{{AutomaticInterfaceGenerator.IgnoreAutomaticInterfaceAttributeName}}}Attribute() { }
                        }
                    }
                    """,
                    Encoding.UTF8
                )
            );
        });
        return context;
    }
}
